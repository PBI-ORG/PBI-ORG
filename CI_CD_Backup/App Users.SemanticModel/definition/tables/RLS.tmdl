table RLS
	lineageTag: 5b95f8fd-4d54-47be-8616-a687969f9595

	column AppId
		dataType: string
		lineageTag: 7a8471d3-db64-4b1a-81a3-6cfbe32068cc
		summarizeBy: none
		sourceColumn: AppId

		annotation SummarizationSetBy = Automatic

	column AppName
		dataType: string
		lineageTag: 92d57cb3-f9f1-4aa0-8b8c-cbc904f0e731
		summarizeBy: none
		sourceColumn: AppName

		annotation SummarizationSetBy = Automatic

	column AppUserAccessRight
		dataType: string
		lineageTag: 20fe22bf-c04e-40b9-b72c-437f0c9ae759
		summarizeBy: none
		sourceColumn: AppUserAccessRight

		annotation SummarizationSetBy = Automatic

	column displayName
		dataType: string
		lineageTag: b3dc246f-31d0-404d-96fc-35f38154b629
		summarizeBy: none
		sourceColumn: displayName

		annotation SummarizationSetBy = Automatic

	column 'Email Address'
		dataType: string
		lineageTag: f446dd5a-f40c-4b0a-893d-efeee8a8b91d
		summarizeBy: none
		sourceColumn: Email Address

		annotation SummarizationSetBy = Automatic

	column 'Having readergroups/not'
		dataType: string
		lineageTag: 7f8ca6c3-bdbb-400a-baa2-78748029014c
		summarizeBy: none
		sourceColumn: Having readergroups/not

		annotation SummarizationSetBy = Automatic

	partition RLS = m
		mode: import
		source =
				let
				    Source = PowerPlatform.Dataflows(null),
				    Workspaces = Source{[Id="Workspaces"]}[Data],
				    #"6c3250c1-cd1a-4bb8-acb7-0518bc2c8151" = Workspaces{[workspaceId="6c3250c1-cd1a-4bb8-acb7-0518bc2c8151"]}[Data],
				    #"e9e9ea33-99d3-4f97-9fd9-7c0e43f4c844" = #"6c3250c1-cd1a-4bb8-acb7-0518bc2c8151"{[dataflowId="e9e9ea33-99d3-4f97-9fd9-7c0e43f4c844"]}[Data],
				    AppsUsers_ = #"e9e9ea33-99d3-4f97-9fd9-7c0e43f4c844"{[entity="AppsUsers",version=""]}[Data],
				    #"Removed Columns" = Table.RemoveColumns(AppsUsers_,{"graphId", "principalType", "userType", "identifier"}),
				    #"Merged Queries" = Table.NestedJoin(#"Removed Columns", {"displayName"}, #"SecurityGroups", {"principalgroupname"}, "SecurityGroups", JoinKind.LeftOuter),
				    #"Expanded SecurityGroups" = Table.ExpandTableColumn(#"Merged Queries", "SecurityGroups", {"userprincipalname"}, {"userprincipalname"}),
				    #"Merged Columns" = Table.CombineColumns(#"Expanded SecurityGroups",{"emailAddress", "userprincipalname"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"Email Address"),
				    #"Appended Query" = Table.Combine({#"Merged Columns", #"AppsUsers from Nested SecurityGroups", #"NestedGroups Not Mapping"}),
				    #"Added Conditional Column" = Table.AddColumn(#"Appended Query", "Custom", each if Text.Contains([displayName], "(Auto)") then 0 else if Text.Contains([displayName], "ALL") then 0 else if Text.Contains([displayName], "Reader") then 1 else if Text.Contains([displayName], "Viewer") then 1 else 0),
				    #"Renamed Columns" = Table.RenameColumns(#"Added Conditional Column",{{"Custom", "Having readergroups/not"}}),
				    #"Filtered Rows" = Table.SelectRows(#"Renamed Columns", each Text.Contains([displayName], "Publisher") or Text.Contains([displayName], "publisher") or Text.Contains([displayName], "Admin") or Text.Contains([displayName], "admin"))
				in
				    #"Filtered Rows"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

