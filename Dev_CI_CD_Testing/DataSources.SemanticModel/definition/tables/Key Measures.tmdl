table 'Key Measures'
	lineageTag: cf57c687-2770-476c-890c-81f27d79bbe1

	measure '# Datasets' = DISTINCTCOUNTNOBLANK(DataSourcesByDatasetId[DatasetId])
		formatString: #,0
		lineageTag: f059cb04-9de1-4b89-a1a5-7b757febb9b9

		changedProperty = FormatString

	measure '# Sources' = COUNTROWS(GROUPBY(DataSourcesByDatasetId,DataSourcesByDatasetId[CapacityId],DataSourcesByDatasetId[CapacityName],DataSourcesByDatasetId[connectionString],DataSourcesByDatasetId[database],DataSourcesByDatasetId[DatasetName],DataSourcesByDatasetId[datasourceType],DataSourcesByDatasetId[gatewayId],DataSourcesByDatasetId[GroupId],DataSourcesByDatasetId[GroupName],DataSourcesByDatasetId[kind],DataSourcesByDatasetId[path],DataSourcesByDatasetId[server],DataSourcesByDatasetId[url],DataSourcesByDatasetId[DatasetId],DataSourcesByDatasetId[datasourceId]))
		formatString: 0
		lineageTag: c5e89db2-d2b2-4d68-ad7b-3aa8e8397ab8

		changedProperty = FormatString

	measure '#Connectors not being used in last 60 days' = CALCULATE(DISTINCTCOUNT(ConnectorDetails[connectionDetails]),ConnectorDetails[Views_60days]=BLANK(),ConnectorDetails[Views_60days]=0)
		formatString: 0
		lineageTag: 33ee94df-7a71-4ef4-b3a8-6defaaa2ea50

	measure '#Connector not mapping to Datasets' = CALCULATE(COUNTROWS(SUMMARIZE(ConnectorDetails,ConnectorDetails[name],ConnectorDetails[datasourceName],ConnectorDetails[connectionDetails])),ConnectorDetails[DatasetId]=BLANK())
		formatString: 0
		lineageTag: 79d8be5a-6dcd-4231-a0db-1f5e756bb2f3

	measure '#BetMGM Exception Count' = ```
			
			CALCULATE (
			    [# Datasets],
			    DataSourcesByDatasetId[CapacityName] = "BetMGM",
			    DataSourcesByDatasetId[datasourceType] = "Extension",
			    DataSourcesByDatasetId[kind] = "Snowflake",
			    DataSourcesByDatasetId[SnowflakeServerException] = FALSE
			) + 0
			
			```
		formatString: 0
		lineageTag: a1080563-d88a-491a-9b37-8921b60e6fe8

	measure '#Entain Exception Count' = ```
			
			CALCULATE (
			    [# Datasets],
			    DataSourcesByDatasetId[CapacityName] <> "BetMGM",
			    DataSourcesByDatasetId[datasourceType] = "Extension",
			    DataSourcesByDatasetId[kind] = "Snowflake",
			    DataSourcesByDatasetId[SnowflakeServerException] = FALSE
			) + 0
			
			```
		formatString: 0
		lineageTag: 19f7cd46-c18a-4150-bb36-eee84fd08a6c

	partition 'Key Measures-8d5fc69d-e01e-4096-9222-d4a7aa001e7f' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

